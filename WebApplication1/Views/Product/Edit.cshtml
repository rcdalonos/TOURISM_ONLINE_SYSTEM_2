@model WebApplication1.Models.ProductEdit

@{
    //ViewBag.Title = "Edit";
}

@*<h2>Edit</h2>*@


@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h2>Edit Business Profile</h2>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductID)

    @Html.HiddenFor(model => model.ImagePath)
    @Html.HiddenFor(model => model.ImageFileName)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <lablel>Max Image file Size: 2MB</lablel><br />
            @if (Model.ImagePath == null || Model.ImagePath == "")
            {
                Model.ImagePath = "~/ProductImages/businessdefaultpic.jpg";
                //<img src="~/ProductImages/businessdefaultpic.jpg" />
            }

            <img src="@Url.Content(Model.ImagePath)" alt="preview" id="imagePreview" style="border: 5px solid grey; height: 169px; width: 176px; display: block;" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Picture</label>
        <div class="col-md-10">
            <input type="file" name="file" value="" onchange="return ShowImagePreview(this)" class="form-control" id="fileupload" />
            @Html.ValidationMessageFor(model => model.file, null, new { @class = "text-danger" })

        </div>
    </div>

    <script>
        function ShowImagePreview(input) {

            debugger;
            if (input.files && input.files[0]) {
                var fname = input.files[0].name;

                var filesize = input.files[0].fsize;
                var size = parseFloat(input.files[0].size).toFixed(2);
                //alert(size);
                //var Maxvalue = 1048576;
                var Maxvalue = 2121592;
                if (size > Maxvalue) {
                    //alert(Maxvalue);
                    alert("Image Size is too large!");
                    $("#fileupload").val("");

                    return false;
                }

                var re = /(\.jpg|\.jpeg|\.bmp|\.gif|\.png)$/i;
                if (!re.exec(fname)) {
                    alert("Image not supported!");
                    $("#fileupload").val("");

                    return false;
                }
                else {
                    //document.getElementById("ImagePath").textContent = "asa";

                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').prop('src', e.target.result);

                        //$('#ImagePath').val("Imageuploaded");
                        //$('#ImagePath').val(filesize);
                        //$('#imagePreview').text =
                    };
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }
    </script>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassificationId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.ClassificationId, Model.classificationlist, "--Select Classification--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ClassificationId, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BusinessName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BusinessOwner, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BusinessOwner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BusinessOwner, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BusinessAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BusinessAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BusinessAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Session["accountrole"].ToString() == "TourismAdminRole")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.BusinessStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.BusinessStatus, Model.BusinessSatusList, "--Select Business Status--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BusinessStatus, "", new { @class = "text-danger" })

            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.BusinessStatus)
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
